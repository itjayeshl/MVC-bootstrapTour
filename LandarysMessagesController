using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using System.Web;
using System.Web.Http;

namespace WEBAPI_Landarys.Controllers
{
    public class LandarysMessagesController : ApiController
    {
        [HttpGet]
        [Route("api/LandarysMessages/GetMessages")]
        public List<string> GetMessages()
        {
            List<string> messageList = new List<string>();
            messageList.Add("First Message" + Environment.NewLine);
            messageList.Add("Second Message" + Environment.NewLine);
            messageList.Add("Third Message" + Environment.NewLine);
            messageList.Add("Fourth Message" + Environment.NewLine);
            return messageList;
        }
        [HttpPost]
        [Route("api/LandarysMessages/PostMessages")]
        public string PostMessages()
        {
            string firstname = HttpContext.Current.Request.QueryString["firstname"].ToString();
            string lastname = HttpContext.Current.Request.QueryString["lastname"].ToString();
            return firstname + " " + lastname;
        }
        [HttpPost]
        [Route("api/LandarysMessages/CreateToken")]
        public string CreateToken()
        {
            string OAuth2Url = "http://api.landrysselect.com/token";
            
            var dict = new Dictionary<string, string>();
            dict.Add("grant_type", "password");
            dict.Add("username", "locuser");
            dict.Add("password", "L@n#ry$LOC@P1");
            //TokenResponse tokenResponse = await PostFormUrlEncoded<TokenResponse>(OAuth2Url, oAuth2PostData);
            TokenResponse tokenResponse =
    (Task.Run(async ()
        => await PostFormUrlEncoded<TokenResponse>(OAuth2Url,dict)))
        .Result;
            return tokenResponse.access_token;
        }
        public static async Task<TResult> PostFormUrlEncoded<TResult>
            (string url, IEnumerable<KeyValuePair<string, string>> postData)
        {
            using (var httpClient = new HttpClient())
            {
                using (var content = new FormUrlEncodedContent(postData))
                {
                    content.Headers.Clear();
                    content.Headers.Add("Content-Type", "application/x-www-form-urlencoded");

                    HttpResponseMessage response = await httpClient.PostAsync(url, content);

                    return await response.Content.ReadAsAsync<TResult>();
                }
            }
        }
    }
    public class TokenResponse
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public int expires_in { get; set; }
        public string userName { get; set; }
        public string issued { get; set; }
        public string expires { get; set; }
    }
    public class OAuth2PostData
    {
        public string grant_type { get; set; }
        public string username { get; set; }
        public string password { get; set; }
    }

}
